# Default values for microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  replicaCount: 1
  environment: {}
   # list of key: value
   # GLOBAL1: value
hostAliases: {} 
#  - ip: "10.0.0.1"
#    hostnames:
#    - "host.domain.com"
replicaCount: 1

image:
  registry: registry.hub.docker.com/
  repository: microservices
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: ""
nameOverride: ""
fullnameOverride: ""

# command: ["/bin/sh","-c"]
# args: ["echo 'consuming a message'; sleep 5"]

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
vault: {}
#  enabled: true
#  secretName: vault-secrets
#  variables:
#	VAULT_ADDR: addr
#	VAULT_PATH: path

environment: {}

volumes:
  enabled: false
  pvc:
    enabled: false
    existing_claim:
    name: pvc
    mountPath: /pv
    size: 1G
    class:
    accessModes:
      - ReadWriteOnce

service: {}
#  type: ClusterIP
#  annotations: {}
#  specs:
#    - port: 8000
#      targetPort: 8000
#      name: http
ingress:
  enabled: true
  rules:
     - annotations: {}
       type: web
       # kubernetes.io/ingress.class: nginx
       # kubernetes.io/tls-acme: "true"
       hosts:
         - host: chart-example.local
           path: /
           serviceName: chart-example.local
           servicePort: 80
       tls: []
     #   - secretName: chart-example-tls
     #    hosts:
     #      - chart-example.local
   
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

liveness:
  enabled: false
  path: /alive
  port: 8001
  initialDelaySeconds: 3
  periodSeconds: 3

readiness:
  enabled: false
  path: /ready
  port: 8001
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
